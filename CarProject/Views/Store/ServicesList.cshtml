@{
    ViewBag.Title = "نمایش سرویس ها";
    var dbs = new CarProject.DBSEF.CarAutomationEntities();
    var rand = new Random();

    string searchtext = "";
    int orderby = 1;
    int orderbydirection = 1;

    int page = 0;
    if (Request.QueryString.AllKeys.Contains("page"))
    {
        int.TryParse(Request.QueryString["page"], out page);
    }
    int totalitems = 0;
    int showinpage = 20;


    var Service = dbs.AutoServices.AsQueryable();




    //var carProducts = dbs.Products.Where(c => c.ProductCars.Select(c2 => c2.CarsId).Contains(Model.Car.CarsId));

    //var brandFilters = Request.QueryString.GetValues("CarBrand");
    //var CountryFilter = Request.QueryString.GetValues("CountryFilter");
    //var Company_filter = Request.QueryString.GetValues("CompanyFilter");
    var Category_filter = Request.QueryString.GetValues("CategoryFilter");
    var Car_filter = Request.QueryString.GetValues("CarFilter");

    //if (CountryFilter != null && CountryFilter.Length > 0)
    //{
    //    products = products.Where(c => CountryFilter.Contains(c.CountryId.ToString()));
    //}
    //if (brandFilters != null && brandFilters.Length > 0)
    //{
    //    products = products.Where(c => brandFilters.Contains(c.CarBrandId.ToString()));
    //}
    //if (Company_filter != null && Company_filter.Length > 0)
    //{
    //    products = products.Where(c => Company_filter.Contains(c.CompanyId.ToString()));
    //}
    if (Category_filter != null && Category_filter.Length > 0)
    {
        Service = Service.Where(c => Category_filter.Contains(c.ServicesCategoryId.ToString()));
    }
    if (Car_filter != null && Car_filter.Length > 0)
    {
        Service = Service.Where(c => Car_filter.Contains(c.CarId.ToString()));
    }






    int GroupCategoryFilter = 0;
    if (ViewContext.RouteData.Values["id"] != null)
    { int.TryParse(ViewContext.RouteData.Values["id"].ToString(), out GroupCategoryFilter); }

    if (GroupCategoryFilter > 0)
    { Service = Service.Where(c => c.ServicesCategoryId == GroupCategoryFilter); }//first filter category

    if (Request.QueryString.AllKeys.Contains("searchtext"))
    { searchtext = Request.QueryString["searchtext"]; }

    if (!string.IsNullOrWhiteSpace(searchtext))
    { Service = Service.Where(p => p.AutoServiceName.Contains(searchtext)); }//filter base on Search key

    if (Request.QueryString.AllKeys.Contains("Orderby") && !string.IsNullOrWhiteSpace(Request.QueryString["Orderby"]))
    { int.TryParse(Request.QueryString["Orderby"], out orderby); }

    if (Request.QueryString.AllKeys.Contains("OrderDirection") && Request.QueryString["OrderDirection"] == "DESC")
    { orderbydirection = 2; }

    switch (orderby)
    {
        case 2:
            {
               // if (orderbydirection == 2) { Service = Service.OrderByDescending(c => (c.Service.OrderByDescending(p => p.ProductPriceId).FirstOrDefault() != null) ? c.ProductPrices.OrderByDescending(p => p.ProductPriceId).FirstOrDefault().ProductPrice1 : 1); }
               // else { Service = Service.OrderBy(c => (c.ProductPrices.OrderByDescending(p => p.ProductPriceId).FirstOrDefault() != null) ? c.ProductPrices.OrderByDescending(p => p.ProductPriceId).FirstOrDefault().ProductPrice1 : 1); }
            }
            break;
        case 3:
            {
                if (orderbydirection == 2) { Service = Service.OrderByDescending(c => (c.ServiceToViews.Any() && c.ServiceToViews.FirstOrDefault().Favorite != null) ? c.ServiceToViews.FirstOrDefault().Favorite : 0); }
                else { Service = Service.OrderBy(c => (c.ServiceToViews.Any() && c.ServiceToViews.FirstOrDefault().Favorite != null) ? c.ServiceToViews.FirstOrDefault().Favorite : 0); }
            }
            break;
        case 4:
            {
                if (orderbydirection == 2) { Service = Service.OrderByDescending(c => (c.ServiceToViews.Any() && c.ServiceToViews.FirstOrDefault().Views != null) ? c.ServiceToViews.FirstOrDefault().Views : 0); }
                else { Service = Service.OrderBy(c => (c.ServiceToViews.Any() && c.ServiceToViews.FirstOrDefault().Views != null) ? c.ServiceToViews.FirstOrDefault().Views : 0); }
            }
            break;
        case 5:
            {
                if (orderbydirection == 2) { Service = Service.OrderByDescending(c => dbs.BasketItems.Count(bi => bi.Type == (byte)CarProject.Models.Store.CartUsefull.Basket_ItemType.AutoService && bi.Id == c.AutoServiceId)); }
                else { Service = Service.OrderBy(c => dbs.BasketItems.Count(bi => bi.Type == (byte)CarProject.Models.Store.CartUsefull.Basket_ItemType.AutoService && bi.Id == c.AutoServiceId)); }
            }
            break;
        case 1:
        default:
            {
                if (orderbydirection == 2) { Service = Service.OrderByDescending(c => c.AutoServiceId); }
                else { Service = Service.OrderBy(c => c.AutoServiceId); }
            }
            break;
    }



    totalitems = Service.Count();
    Service = Service.Skip(page * showinpage).Take(showinpage);
}


@section style
{
    <link href="~/Publics/Files/Resources/StorePage/ProductsList.css" rel="stylesheet" />
}


<form method="get">
    <input type="hidden" name="page" id="pageInputContainer" value="@page" />

    <div id="MainContainerOfFilterAndContent">
        <div>
            <div id="searchAndFilter">
                


                <div id="Filter_Category">
                    <h4 class="title"> دسته بندی ها</h4>
                    <div class="checkboxContainer">
                        @foreach (var item in dbs.Categories.OrderBy(b => b.CategoryId).Take(5))
                        {
                            <section class="checkbox">
                                <input type="checkbox" name="CategoryFilter" value="@item.CategoryId" id="Category_@item.CategoryId" @if (Category_filter != null && Category_filter.Contains(item.CategoryId.ToString())) { Write("checked=\"checked\""); } />
                                <label for="Category_@item.CategoryId">
                                    @item.CategoryName
                                </label>
                            </section>
                        }

                        <div id="Filter_Category_more" class="more">
                            @foreach (var item in dbs.Categories.OrderBy(b => b.CategoryId).Skip(5))
                            {
                                <section class="checkbox">
                                    <input type="checkbox" name="CategoryFilter" value="@item.CategoryId" id="Category_@item.CategoryId" @if (Category_filter != null && Category_filter.Contains(item.CategoryId.ToString())) { Write("checked=\"checked\""); } />
                                    <label for="Category_@item.CategoryId">
                                        @item.CategoryName
                                    </label>
                                </section>
                            }
                        </div>
                        <center><a onclick="$('#Filter_Category_more').toggleClass('show');">بیشتر</a></center>
                    </div>
                </div>





               


               







            </div>
        </div>

        <div id="ItemsContentContainer">
            <div id="searchsection">
                <section id="searchInput">
                    <input type="text" name="searchtext" value="@searchtext" placeholder="جستجو در میان محصولات" />
                    @*<button type="submit"><span class="gia-search"></span></button>*@
                </section>

                <section id="SearchOrderBy">
                    <span>مرتب سازی بر اساس</span>
                    <select name="Orderby">
                        <option value="1" @if (orderby == 1) { Write("selected=\"selected\""); }>تاریخ</option>
                        <option value="2" @if (orderby == 2) { Write("selected=\"selected\""); }>قیمت</option>
                        <option value="3" @if (orderby == 3) { Write("selected=\"selected\""); }>محبوبیت</option>
                        <option value="4" @if (orderby == 4) { Write("selected=\"selected\""); }>بازدید</option>
                        <option value="5" @if (orderby == 5) { Write("selected=\"selected\""); }>فروش</option>
                    </select>
                    به صورت
                    <select name="OrderDirection">
                        <option value="ASC" @if (orderbydirection == 1) { Write("selected=\"selected\""); }>کمتر به بیشتر</option>
                        <option value="DESC" @if (orderbydirection == 2) { Write("selected=\"selected\""); }>بیشتر به کمتر</option>
                    </select>
                    @*<input type="radio" name="OrderDirection" value="ASC" @if (orderbydirection == 1) { Write("checked=\"checked\""); } id="OrderDirectionASC" />
                        <label  for="OrderDirectionASC">صعودی</label>
                        <input type="radio" name="OrderDirection" value="DESC" @if (orderbydirection == 2) { Write("checked=\"checked\""); } id="OrderDirectionDESC"  />
                        <label for="OrderDirectionDESC">نزولی</label>*@
                </section>

                <input type="submit" value="جستجو/فیلتر" class="t2button" />
            </div>

            <div class="pagination">
                @for (int i = 0; i < Math.Ceiling((double)(totalitems / showinpage)); i++)
            {
                if (i == page)
                {
                        <span>@{Write(i + 1); }</span>
                            }
                            else
                            {
                                <input type="button" onclick="document.getElementById('pageInputContainer').value = '@i'; this.form.submit();" value="@{Write(i + 1);}" />
        }
    }
            </div>
            <div class="listOfProducts" id="ListofcarsShower">
                @{
                    foreach (var item in Service)
                    {
                        var PicFileUrl = "~/Publics/Gallery/Services/" + item.AutoServiceId;
                       // var finfo = new System.IO.DirectoryInfo(Server.MapPath(PicFileUrl));

                        @*if (finfo.Exists && finfo.GetFiles().Count() > 0)
                        {
                            <a href="@Url.RouteUrl("infoRoute", new { controller = "Store", action = "ServiceView", id = item.AutoServiceId, info1 = item.ServicesCategory.ServicesCategoryName, info2 = item.AutoServiceName })" class="item">
                                <img src="@Url.Content(PicFileUrl + "/" + finfo.GetFiles()[rand.Next(0,finfo.GetFiles().Length)].Name)" />
                                <section>
                                    <strong>@item.AutoServiceName</strong><br />
                                    <small>@item.ServicesCategory.ServicesCategoryName</small><br />
                                    <small class="price">@if (item.Price.Any())
                                    {<span>@item.ProductPrices.Last().ProductPrice1</span>}
                                    else
                                    {<span>0</span>} ریال</small>
                                </section>
                            </a>
                        }*@
                       
                            <a href="@Url.RouteUrl("infoRoute", new { controller = "Store", action = "ServiceView", id = item.AutoServiceId, info1 = item.ServicesCategory.ServicesCategoryName, info2 = item.AutoServiceName })" class="item">
                                <img src="~/Publics/Gallery/Services/NotFound.png" />
                                <section>
                                    <strong>@item.AutoServiceName</strong><br />
                                    <small>@item.ServicesCategory.ServicesCategoryName</small><br />
                                    <small class="price">@if (@item.Price.Any())
                                    {<span>@*@item.ProductPrices.Last().ProductPrice1*@</span>}
                                    else
                                    {<span>0</span>}</small>
                                </section>
                            </a>
                       
                    }
                }
            </div>
            <div class="pagination">
                @for (int i = 0; i < Math.Ceiling((double)(totalitems / showinpage)); i++)
            {
                if (i == page)
                {
                        <span>@{Write(i + 1); }</span>
                            }
                            else
                            {
                                <input type="button" onclick="document.getElementById('pageInputContainer').value = '@i'; this.form.submit();" value="@{Write(i + 1);}" />
        }
    }
            </div>

        </div>
    </div>
</form>