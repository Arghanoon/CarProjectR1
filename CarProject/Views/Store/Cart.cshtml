@using CarProject.Controllers
@model CarProject.DBSEF.Basket
@{
    ViewBag.Title = "سبد خرید کاربر";
    var dbs = new CarProject.DBSEF.CarAutomationEntities();

    var usfull = new CarProject.Models.Store.CartUsefull();

    var discountstr = "";
    CarProject.DBSEF.Discount DiscountObject = null;
    if (Model.DiscountId != null)
    {
        DiscountObject = dbs.Discounts.FirstOrDefault(dis => dis.DiscountId == Model.DiscountId);
        if(DiscountObject != null)
        {
            discountstr = DiscountObject.DiscountCode;
        }
    }
}
@using CarProject.App_Code
@using CarProject.Models.Store

<div class="page">

    <form method="post" id="CartForm">
        <h3>سبد خرید کاربر</h3>
        <hr />
        <div class="inputsContainer">
            <section class="input">
                <label>کد تفخیف</label>
                <input type="text" name="InputDiscountCod" placeholder="کد تخفیف" value="@discountstr" />
                @Html.HiddenFor(m => m.DiscountId)
                <span>@Html.ValidationMessage("InputDiscountCod")</span>
            </section>
        </div>


        @if (DiscountObject != null)
        {
            <section>کد تخفیف شما شامل <q>@DiscountObject.Discount1</q> درصد تخفیف میباشد.</section>
        }

        <div>
            <table id="cartTable">
                <thead>
                    <tr>
                        <th class="fix">حذف</th>
                        <th class="fix">شماره</th>
                        <th>نام</th>
                        <th class="fix">نوع</th>
                        <th class="fix">قیمت</th>
                        <th class="fix">قیمت + تخفیف</th>
                        <th class="fix">تعداد</th>
                        <th class="fix">مبلغ قابل پرداخت</th>
                    </tr>
                </thead>
                <tbody>
                    @{ 
                        int i = 1;
                        decimal TotalPrice = 0;
                     }
                    @foreach (var item in Model.BasketItems)
                    {
                        
                        var discountprice = usfull.GetPriceOfCartObject_withDiscount(item.Id.Value, (CarProject.Models.Store.CartUsefull.Basket_ItemType)item.Type.Value, DiscountObject);
                        var discountprice_WI = usfull.GetPriceOfCartObject_withDiscount_WintoutInstallation(item.Id.Value, (CarProject.Models.Store.CartUsefull.Basket_ItemType)item.Type.Value, DiscountObject);
                        var CurrentCalcuationPrice = discountprice;
                        
                        decimal ttpic = 0;
                        int pric = usfull.GetPriceOfCartObject_int(item.Id.Value, (CarProject.Models.Store.CartUsefull.Basket_ItemType)item.Type.Value);
                        int pric_i = usfull.GetPriceOfCartObject_int_WitoutInstallation(item.Id.Value, (CarProject.Models.Store.CartUsefull.Basket_ItemType)item.Type.Value);
                        
                        if (item.Type == (byte)CartUsefull.Basket_ItemType.Product && item.PriceFlag == (byte)CartUsefull.BasketImte_PriceFlag.Product_PriceOnly)
                        { 
                            ttpic = discountprice_WI * item.Count.GetValueOrDefault(0);
                            CurrentCalcuationPrice = discountprice_WI;
                        }
                        else
                        { 
                            ttpic = discountprice * item.Count.GetValueOrDefault(0);
                        }
                        
                        TotalPrice += ttpic;
                        
                        

                        <tr>
                            <td class="fix center   ">
                                @*<input type="checkbox" name="RemoveItem[@item.Id][@item.Type]" class="SelectForRemove" />*@
                                <a href="javascript:void()" onclick="RemoveSelectedOneItemRequest('RemoveItem[@item.Id][@item.Type]')" class="gia-remove"></a>
                            </td>
                            <td class="fix center">@i</td>
                            <td>
                                @usfull.GetNameOfCartObject(item.Id.Value, (CarProject.Models.Store.CartUsefull.Basket_ItemType)item.Type.Value)
                                @if (item.Type == (byte)CartUsefull.Basket_ItemType.Product)
                                {
                                    if (item.PriceFlag == null || item.PriceFlag == (byte)CartUsefull.BasketImte_PriceFlag.UnKnown)
                                    { item.PriceFlag = (byte)CartUsefull.BasketImte_PriceFlag.Product_PricePlusInstallation; }
                                    
                                    <hr />
                                    <label>
                                        <input type="checkbox" name="WithInstallation[@item.Id][@item.Type]" @if (item.PriceFlag == (byte)CartUsefull.BasketImte_PriceFlag.Product_PricePlusInstallation) { Write("checked=\"checked\""); } data-itemprice="@discountprice" data-itemprice-wi="@discountprice_WI" onchange="ChangeInstallationTypeFunction(event);" />
                                        <span>نصب در محل</span>
                                    </label>
                                }
                            </td>
                            <td class="fix center">
                                @usfull.GetNameofCartType((CarProject.Models.Store.CartUsefull.Basket_ItemType)item.Type)
                            </td>
                            <td class="fix center">
                                    @if (item.Type == (byte)CartUsefull.Basket_ItemType.Product)
                                    {
                                        <section>@pric</section>
                                        <small>+ هزینه نصب = @pric_i</small>
                                    }
                                    else
                                    {
                                        @pric
                                    }
                            </td>
                            <td class="fix center">
                                @if (item.Type == (byte)CartUsefull.Basket_ItemType.Product)
                                {
                                    <section>@discountprice_WI</section>
                                    <small>+ هزینه نصب = @discountprice</small>
                                }
                                else
                                {
                                    @discountprice
                                }
                            </td>
                            <td class="fix center">
                                <div class="input">
                                    <input type="text" name="Count[@item.Id][@item.Type]" value="@item.Count" class="center CountInput" data-itemprice="@CurrentCalcuationPrice"   onkeydown="return IntInputOnly(event)" onchange="ChangeTotalPriceValue(event)" />
                                </div>
                            </td>
                            <td class="fix center">
                                <span class="totalprice">
                                    @{
                                           @ttpic
                                    }
                                </span>
                            </td>
                        </tr>
                    
                    i += 1;
                }

                    <tr style="background:#a7d4ff;">
                        <td colspan="5">پلن تحویل کالا / انجام خدمات</td>
                        <td colspan="2">
                            <div class="input">
                                <select name="DelivaryTypeId" onchange="PlanComboBoxOnChange(this)">
                                    @{
                                        var xDeliveryTypes = dbs.ProductsOrServicesDeliveryTypes.AsQueryable();
                                        int DLTYP = 0;
                                        if (Model.ProductsOrServicesDeliveryType == null && xDeliveryTypes.Count() > 0)
                                        {
                                            int.TryParse(xDeliveryTypes.First().Price, out DLTYP);
                                        }
                                        else
                                        {
                                            int.TryParse(Model.ProductsOrServicesDeliveryType.Price, out DLTYP);
                                        }

                                        TotalPrice += DLTYP;

                                        int? selectedid = (Model.DelivaryTypeId == null) ? xDeliveryTypes.First().DeliverTypeID : Model.DelivaryTypeId;

                                        foreach (var item in xDeliveryTypes)
                                        {
                                        <option @if (selectedid == item.DeliverTypeID) { Write("selected=\"selected\""); } value="@item.DeliverTypeID" data-price="@item.Price">@item.Name</option>
                                    }
                                    }
                                </select>
                            </div>
                        </td>
                        <td>
                            <section id="Plan_Selected_Price" class="center">@DLTYP</section>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="7">مجموع مبلغ قابل پرداخت</td>
                        <td>
                            <span id="SumOfAllPrices">
                                @TotalPrice
                            </span>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <hr />
        
        <div class="formAction" dir="ltr">
            <input type="submit" class="button green" value="ادامه و تکمیل فرایند خرید" name="ContinueShoping" />
            <input type="button" class="button red" value="پاک کردن سبد خرید" onclick="document.getElementById('removeBasketCompletly').submit();"/>
            @*<input type="button" class="button red" value="حذف موارد انتخابی" onclick="RemoveSelectedItemRequest()" />*@
        </div>

    </form>

    
    <form method="post" action="@Url.Action("Cart_RemoveCopletly")" id="removeBasketCompletly"></form>

</div>


@section style
{
    <style>
        #cartTable {
            width:100%;
            padding:5px;
            margin:5px;
        }
            #cartTable td,
            #cartTable th {
                padding:1px 5px;
                border:thin solid #888;
            }

            #cartTable th {
                background:#bbb;
            }


            #cartTable .fix {
                width:0; 
                white-space:nowrap;
            }
            #cartTable .center {
                text-align: center;
            }

                
    </style>
}

@section script
{
    <script>
        function FormSumbitFunction(e) {
            //e.preventDefault();
            //$('#cartTable tbody tr').each(function (index, element) {
            //    $('input', element).each(function (index2, element2) {
            //        $(element2).attr('name', "[" + index + "]." + $(element2).attr('name'));
            //    });
            //});

            //e.target.submit();
        }

        function ChangeTotalPriceValue(e) {
            tr = $(e.target).parent().parent().parent();
            
            exh = $(e.target).attr('data-itemprice');
            $('.totalprice', tr).html((exh * parseInt(e.target.value)));
           
            sumofall = 0;
            $("#cartTable tbody tr .totalprice").each(function (index, element) {
                sumofall += parseInt($(element).html());
            });
            
            document.getElementById("SumOfAllPrices").innerHTML = sumofall;
        }

        function IntInputOnly(e) {
            arf = ["Tab", "PageDown", "PageUp", "Delete","Home", "End", "ArrowLeft", "ArrowRight","F5","Backspace", "ArrowTop","0","1", "2","3","4","5","6","7","8","9"];
            if (arf.indexOf(e.key) >= 0) {
                return true;
            }
            else {
                e.preventDefault();
                return false;
            }
        }


        function RemoveSelectedItemRequest() {
            frm = document.getElementById("CartForm");
            frm.action = "@Url.Action("Cart_remoSelection")";
            frm.submit();
        }

        function RemoveSelectedOneItemRequest(objename) {
            frm = document.createElement("form");
            frm.method = "Post";
            frm.action = "@Url.Action("Cart_remoSelection")";
            document.body.appendChild(frm);
            

            inp = document.createElement("input");
            inp.type = "hidden";
            inp.name = objename;
            inp.value = true;
            frm.appendChild(inp);
            frm.submit();
        }

        function PlanComboBoxOnChange(obj) {
            var x = obj.options[obj.selectedIndex].getAttribute('data-price');
            document.getElementById('Plan_Selected_Price').innerHTML = x;

            sumofall = 0;
            $("#cartTable tbody tr .totalprice").each(function (index, element) {
                sumofall += parseInt($(element).html());
            });
            document.getElementById("SumOfAllPrices").innerHTML = (sumofall + parseInt(x));
        }

        function ChangeInstallationTypeFunction(e) {
            tr = $(e.target).parent().parent().parent();
            CountInput = $(".CountInput", tr);
            
            if (e.target.checked) {
                $(CountInput).attr('data-itemprice', $(e.target).attr('data-itemprice'));
            }
            else {
                $(CountInput).attr('data-itemprice', $(e.target).attr('data-itemprice-wi'));
            }

            $(CountInput).change();
        }
    </script>
}